import { Project } from './project';

export const PROJECTS: Project[] = [
    { id: 1, title: 'LDM Day Planner', date: new Date('08/01/2015'), content: 'Custom built time tracking app built inside of Salesforce using Angular and Apex. This was a project that I took on to learn developing for Salesforce because we (Launch) were partnered with Salesforce and solve our issue of not being able to track time efficiently. Designed and built the prototype during off hours and then got time to build it in office. Used Angular Material for overall look and feel of the app. This app is still in use at Launch today.',
    challenge: "", company: 'Launch' },
    { id: 2, title: 'LDM PM Tool', date: new Date('10/01/2015'), content: "Custom built time project management app built inside of Salesforce using Angular and Apex. This was a second project that sprung up after the Day Planner's success. The app was built because every project management tool out there always got us 90% of the way there and we needed a custom tool to suite our specific needs. This app was much more Apex heavy of a build and Salesforce creation of custom objects. I based the design off of Google's Inbox and it was a fun challenge to match the design of Inbox. This app is still in use today at Launch.", challenge:"", company: 'Launch' },
    { id: 3, title: 'Salesforce: Awesome Admin', date: new Date('11/01/2015'), content: "Lead developer setting the Salesforce:AwesomeAdmin team up with a new and refreshed WordPress website. Created the functionality and backend logic of the site. Implemented an endpoint to hit on the front-end to retrieve posts for a live, javascript-driven search. Made custom, timed animations that were depending on each other finishing before the next executed. Utilizing AngularJS created the blog archive page which features dynamic filtering by categories and tags together.", challenge:"", company: 'Launch' },
    { id: 4, title: 'Sweet Street', date: new Date('11/01/2015'), content: "Contributor helping with the testing and refining of the site before go-live. Worked out the kinks in the PayPal connection to WooCommerce and hooked up PayPal Pro so that users did not have to leave the site to put their credit card information in. Created an importer that updated/created user's additional shipping addresses off of an export from their Magento site.", challenge: "The importer had to rip through a CSV which was over 4000 rows and possibly update/create user meta if it didn't exist yet. To avoid timeouts, I implemented code to make AJAX requests and only parse 20 rows at a given time.", company: 'Launch' },
    { id: 5, title: 'Go Greater Reading', date: new Date('06/01/2015'), content: 'Lead developer helping to take their site off of a custom CMS and bring it onto WordPress. Rebuilt all of the functionality on the site on WordPress while making improvements to the processes and how the data got handled.', challenge: 'The plugin that we used for this project did not come "out-of-the-box" with the functionality that they needed. Made extensions via a plugin to add functionality to the default Events and Venues custom post types that came along with the plugin.', company: 'Launch' },
    { id: 6, title: 'Omnicable', date: new Date('12/01/2014'), content: "Developer helping with the styling and WordPress implementation of the website. Custom built theme to help the client showcase their products along with easily managing their employees at several locations. Implemented a PDF generator to create a PDF view of each of their products so that clients could download/share the document.", challenge: "Developer helping with the styling and WordPress implementation of the website. Custom built theme to help the client showcase their products along with easily managing their employees at several locations. Implemented a PDF generator to create a PDF view of each of their products so that clients could download/share the document.", company: 'Launch' },
    { id: 7, title: 'Toggle PSD', date: new Date('11/01/2015'), content: "Developed to help with lining up DOM elements with design comps. When slicing-and-dicing a design comp, you are constantly checking the sizes, margins, and other values to ensure you are as close to pixel-perfect as possible. TogglePSD helps solve this by overlaying the comp on top of your code. I created a WordPress plugin that allows you to upload images of the comps each as a custom post type. On the front end, a list appears in the nav with all comps. Utilizing Backbone and Underscores, the plugin allows you to toggle the comps visibility over the website.", challenge: "", company: 'Launch' },
];
